# run PE LVS ONLY


agents: { jobsize: "hours" }

##############################################################################
# Use this to test a specific branch/commit:
# Add to env:
#   NOV11: ee214ef77b827f969e4b5f056f5d866cf391be7a
# Add to commands:
# - pwd; git branch; git checkout $$NOV11

##############################################################################
# Note: "echo exit 13" prevents hang at genus/innovus prompt
env:
  TEST: 'echo exit 13 | mflowgen/test/test_module.sh'

steps:

##############################################################################
# INDIVIDUAL TILE RUNS

- label: 'PE lvs check'
  commands:
  - $TEST --need_space 30G full_chip tile_array Tile_PE --steps lvs --debug --use_cache constraints,custom-genus-scripts,custom-timing-assert,power-domains,rtl,tsmc16,cadence-genus-synthesis,custom-flowgen-setup,cadence-innovus-flowsetup,custom-init,cadence-innovus-init,custom-power-leaf,cadence-innovus-power,cadence-innovus-place,cadence-innovus-cts,cadence-innovus-postcts_hold,cadence-innovus-route,custom-short-fix,cadence-innovus-postroute,cadence-innovus-signoff
  - set -x; pwd
  - set -x; ls -l full_chip/19-tile_array/17-Tile_PE/27-mentor-calibre-lvs
  - set -x; ls -l full_chip/19-tile_array/17-Tile_PE/27-mentor-calibre-lvs/svdb
  - set -x; find full_chip -name svdb -exec echo /bin/rm -rf {} \;
  - set -x; find full_chip -name svdb -exec echo /bin/rm -rf {} \; > /tmp/tmp$$.sh
  - set -x; source /tmp/tmp$$.sh
  - set -x; ls -l full_chip/19-tile_array/17-Tile_PE/27-mentor-calibre-lvs
  - set -x; ls -l full_chip/19-tile_array/17-Tile_PE/27-mentor-calibre-lvs/svdb


#   - set -x; pwd; find full_chip -name svdb -exec echo ls -ld {} \;
#   - set -x; pwd; find full_chip -name svdb -exec echo ls -l {} \;
#   - set -x; /bin/rm -rf `
# 
# 
# 
#   - set -x; pwd; find full_chip -name svdb -exec /bin/rm -rf {} \;
# 
# - wait: { continue_on_failure: true } # One step at a time + continue on failure
# 
# - label: 'MemCore synth 17m'
#   commands:
#   - $TEST --need_space 30G full_chip tile_array Tile_MemCore --steps synthesis --debug
# - wait: { continue_on_failure: true } # One step at a time + continue on failure

