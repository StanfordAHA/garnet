agents: { jobsize: "hours" }

##############################################################################
# Use this to test a specific branch/commit:
# Add to env:
#   NOV11: ee214ef77b827f969e4b5f056f5d866cf391be7a
# Add to commands:
# - pwd; git branch; git checkout $$NOV11

env:
  GOLD: /build/pm${BUILDKITE_BUILD_NUMBER}
  TEST: 'echo exit 13 | mflowgen/test/test_module.sh'

  OVERRIDE_MFLOWGEN_BRANCH: droute-auto-stop
  stop_on_failed_routing: true

  CACHE: /build/gold
  GET_STEP_CONTEXT: eval $$GARNET_HOME/mflowgen/bin/get-step-context.sh


# prototype for using get-step-context:
#   % cd /build/chip2
#   % get-step-context.sh /build/chip1 cadence-innovus-postroute_hold
#   % make *-cadence-innovus-postroute_hold



steps:


# - label: 'setup'
#   commands:
# 
# # # Copy existing rtl collateral
# # - 'set -x; mkdir -p full_chip; cp -rp $$GOLD/full_chip/*-rtl full_chip/'
# 
#   # Copy existing rtl collateral;
#   # Think of setup-buildkite as a fancy "mkdir -p $d && cd $d"
#   - 'set -x; 
#      source mflowgen/bin/setup-buildkite.sh --dir $$GOLD/full_chip;
#      mflowgen run --design $$GARNET_HOME/mflowgen/full_chip;
#      $$GET_STEP_CONTEXT --from /build/gold --step tile_array;
#      pwd; ls -lR'


# Uhhhh...see if this works
- label: 'setup'
  commands:

# # Copy existing rtl collateral
# - 'set -x; mkdir -p full_chip; cp -rp $$GOLD/full_chip/*-rtl full_chip/'

  # Copy existing rtl collateral;
  # Think of setup-buildkite as a fancy "mkdir -p $d && cd $d"
  # "mflowgen run" should maybe renumber rtl step if necessary?

  # Make $GOLD directory and cd to it
  # # "mflowgen run full_chip" to build full_chip framework (may not be necessary)
  # Copy rtl collateral from $CACHE
  # "mflowgen run full_chip" to reset rtl in the context of latest full_chip framework
  # 
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD/full_chip;

     echo "--- fetch fullchip/rtl from $$CACHE";
     pwd; set -x; cp -rp $$CACHE/full_chip/*-rtl .;

     echo "--- fetch fullchip/tile_array/Tile_PE/constraints from $$CACHE";
     (cd $$CACHE; rsync -aRv full_chip/*-tile_array/*-Tile_PE/*-constraints $$GOLD);

     echo "--- design hierarchy: full_chip";
     mflowgen run --design $$GARNET_HOME/mflowgen/full_chip;

     echo "--- design hierarchy: full_chip/tile_array";
     cd *-tile_array; mflowgen run --design $$GARNET_HOME/mflowgen/tile_array;

     echo "--- design hierarchy: full_chip/tile_array/Tile_PE";
     cd *-Tile_PE; mflowgen run --design $$GARNET_HOME/mflowgen/Tile_PE;

     echo "--- make power I guess";
     echo "Build rtl,syn,init,power from sratch, should take like 10 minutes"; 
     make cadence-innovus-power;

     echo "--- fetch place,cts,postcts_hold from $$CACHE";

     set -x

     step=`cd $$CACHE; /bin/ls -1 full_chip/*-tile_array/*-Tile_PE/*-place`
     ls -ld $$CACHE/$$step;
     (cd $$CACHE; rsync -aRv $$step $$GOLD); touch $$GOLD/$$step/.prebuilt
     ls -ld $$GOLD/$$step;

     step=`cd $$CACHE; /bin/ls -1 full_chip/*-tile_array/*-Tile_PE/*-cts`
     ls -ld $$CACHE/$$step;
     (cd $$CACHE; rsync -aRv $$step $$GOLD); touch $$GOLD/$$step/.prebuilt
     ls -ld $$GOLD/$$step;

     step=`cd $$CACHE; /bin/ls -1 full_chip/*-tile_array/*-Tile_PE/*-postcts_hold`
     ls -ld $$CACHE/$$step;
     (cd $$CACHE; rsync -aRv $$step $$GOLD); touch $$GOLD/$$step/.prebuilt
     ls -ld $$GOLD/$$step;

     set +x

     echo;
     echo "--- make route perhaps"
     echo exit 13 | make cadence-innovus-route |& tee make-route.log;
     '
     # Note: "echo exit 13" prevents hang at genus/innovus prompt, allows clean fail


# - label: 'pe rtl'
#   commands:
#   - $TEST --need_space 30G --build_dir $GOLD full_chip tile_array Tile_PE --steps rtl
# - wait: ~
# 
# - label: 'pe syn'
#   commands:
#   - $TEST --need_space 30G --build_dir $GOLD full_chip tile_array Tile_PE --steps synthesis
# - wait: ~


# Looks like we can survive renumberings if we're careful:
# Found the following existing build directories. Their numbering will be
# preserved in the new graph, as will their build status (assuming the same
# graph connectivity). This prevents unnecessary rebuilds due solely to
# different numberings. This means that an existing step N will remain step
# N. For a completely clean build, run the "clean-all" target.
#  
# -  10 : 10-rtl
# -  12 : 12-soc-rtl
# -  18 : 18-tile_array




# Original code:
# 
# - label: 'fc rtl'
#   commands:
#   - $TEST --need_space 30G --build_dir $GOLD full_chip tile_array --steps rtl
# - wait: ~
# 
# 
# - label: 'pe rtl'
#   commands:
#   - $TEST --need_space 30G --build_dir $GOLD full_chip tile_array Tile_PE --steps rtl
# - wait: ~
# 
# 
# - label: 'pe syn'
#   commands:
#   - $TEST --need_space 30G --build_dir $GOLD full_chip tile_array Tile_PE --steps synthesis
# - wait: ~
