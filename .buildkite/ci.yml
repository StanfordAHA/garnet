agents:
  docker: "true"

env:
  CONTAINER: deleteme_garnet_ci${BUILDKITE_BUILD_NUMBER}
  IMAGE: stanfordaha/garnet:latest

steps:

- label: "Delete container"
  agents:
    docker: "true"
  commands:
  - docker kill $CONTAINER
  - docker container prune --force --filter "until=24h" --filter=label='description=garnet' || true
  - docker image prune -a  --force --filter "until=24h" --filter=label='description=garnet' || true
  - exit -1

- label: "Get latest docker"
  agents:
    docker: "true"
  commands:
  - docker pull $IMAGE

- wait

- label: ":wrench: Aha regressions"
  agents:
    docker: "true"
  commands:
  - docker run -id --name $CONTAINER --rm -v /cad:/cad $IMAGE bash
  - docker exec $CONTAINER /bin/bash -c "rm -rf /aha/garnet"
  - echo foo
  - docker cp . $CONTAINER:/aha/garnet
  - echo foobar
  - docker exec $CONTAINER /bin/bash -c "
      echo foobarbaz;
      source /aha/bin/activate;
      source /cad/modules/tcl/init/sh;
      module load base incisive xcelium/19.03.003 vcs/Q-2020.03-SP2;
      pwd; aha regress pr;
    "
      


  # ???
  #   # We report success to the aha-flow app by removing the .TEST file,
  #   # which is created in the post-checkout hook and checked for in the
  #   # pre-exit hook.
  #   - echo "--- Removing Failure Canary"
  #   - ls -al /buildkite
  #   - rm -rf /buildkite/.TEST
  #   - ls -al /buildkite

  
# ALWAYS clean up regardless of test success or failure

- wait: { continue_on_failure: true } # One step at a time + continue on failure
# - wait ~
#   continue_on_failure: true

- label: "Delete container"
  agents:
    docker: "true"
  commands:
  - docker kill $CONTAINER
  - yes | docker image prune -a --filter "until=24h" --filter=label='description=garnet' || true




#   commands:
# 
# 
#   - source /aha/bin/activate
#   - source /cad/modules/tcl/init/sh
#   - module load base xcelium/19.03.003 vcs
#   - rm -rf /aha/garnet
#   - cp -r /workdir /aha/garnet
#   - echo "--- Install requirements"
#   - pip install -r /aha/garnet/requirements.txt
#   - pip install pytest-cov pytest-pycodestyle z3-solver genesis2 coveralls
#   - echo "--- Running CI tests"
#   - cd /aha/garnet && bash .github/scripts/run.sh
# 
#   plugins:
#     - docker#v3.2.0:
#         image: stanfordaha/garnet
#         volumes:
#           - "/cad/:/cad"
#         shell: ["/bin/bash", "-e", "-c"]
#   agents:
#     docker: true
# 
# 
# # ALWAYS clean up regardless of test success or failure
# - wait ~
#   continue_on_failure: true
# 
# - label: "Delete container"
#   commands:
#   - docker kill $CONTAINER
# 
# 
# 
# 
# 
# ==============================================================================
# ==============================================================================
# ==============================================================================
# NOTES
# 
# - label: "Initialize a new container"
# 
# docker pull stanfordaha/garnet:latest
# 
# docker run -id --name $container --rm -v /cad:/cad $image bash
# 
# #   BDIR: /build/pmg${BUILDKITE_BUILD_NUMBER}
# 
# 
#       if [ $use_local_garnet == True ]; then
#         docker exec $container_name /bin/bash -c "rm -rf /aha/garnet"
#         # Clone local garnet repo to prevent copying untracked files
#         git clone $GARNET_HOME ./garnet
#         docker cp ./garnet $container_name:/aha/garnet
#       fi
# 
# check out latest
# 
# 
# - label: ":wrench: Aha-Flow "
#   commands:
# git clone https://github.com/StanfordAHA/aha aha-tmp





# - label: ":wrench: Aha regressions"
#   commands:
#   - docker run -id --name $CONTAINER --rm -v /cad:/cad $IMAGE bash
#   - docker exec $CONTAINER /bin/bash -c "rm -rf /aha/garnet"
#   - docker cp ./garnet $CONTAINER:/aha/garnet
#   - docker exec $CONTAINER /bin/bash -c "source /aha/bin/activate;
#   - docker exec $CONTAINER /bin/bash -c "source /cad/modules/tcl/init/sh"
#   - docker exec $CONTAINER /bin/bash -c "module load base incisive xcelium/19.03.003 vcs/Q-2020.03-SP2"
# 
#   #   # make /bin/sh symlink to bash instead of dash:
#   #   - echo "dash dash/sh boolean false" | debconf-set-selections
#   #   - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
#   #   - apt update
#   #   - apt install time
#   #   - ls /aha
#   #   - pip freeze
#   #   - (cd garnet && echo "garnet" && git rev-parse --verify HEAD)
#   #   # Run regression tests
#   #   - if [[ $$FLOW_REPO ]]; then
#   #       export CONFIG=pr;
#   #     fi
# 
#   # See aha/util/regress.py for test-suite options
#   -  docker exec $CONTAINER /bin/bash -c "aha regress resnet_tests"
#   -  docker exec $CONTAINER /bin/bash -c "pwd; aha regress resnet_tests"
# 
# 
#   # ???
#   #   # We report success to the aha-flow app by removing the .TEST file,
#   #   # which is created in the post-checkout hook and checked for in the
#   #   # pre-exit hook.
#   #   - echo "--- Removing Failure Canary"
#   #   - ls -al /buildkite
#   #   - rm -rf /buildkite/.TEST
#   #   - ls -al /buildkite
