# Use "edit steps" in pipeline web UI to specify agents.
# agents: { queue: "papers" }

env:
  GOLD: /build/gold.${BUILDKITE_BUILD_NUMBER}/full_chip
  LVS_CHECK: ./mflowgen/bin/buildcheck.sh --lvs

  # To support postroute_hold retries
  PRH    : 'eval $$GARNET_HOME/.buildkite/bin/prh.sh'

  # ($FAIL|$UPLOAD): Inserts a "fail" bubble in the buildkite pipeline log
  FAIL1  : 'echo steps : [ { label : FAIL->retry1 , command : exit } ]'
  FAIL2  : 'echo steps : [ { label : FAIL->retry2 , command : exit } ]'
  UPLOAD : 'buildkite-agent pipeline upload'

  # Set slack to -0.3 to make postroute_hold much faster.
  # Default targ slack for full_chip @ 0.06 takes 6 hours atm.
  # With hack target -0.3, should be about 2.5 hours (saves 3.5 hours)
  # MFLOWGEN_PARM_OVERRIDE_hold_target_slack : -0.3

  # Can use this to change target mflowgen branch
  # OVERRIDE_MFLOWGEN_BRANCH: glob-prob

steps:
- label: 'setup'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD;
     mflowgen run --design $$GARNET_HOME/mflowgen/full_chip'
- wait: ~

- label: 'rtl'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 100G;
     echo "--- MAKE RTL"; set -o pipefail;
     make rtl |& tee make-rtl.log'
- wait: ~

# Note: "echo exit 13" prevents hang at genus/innovus prompt, allows clean fail
- label: 'tile_array'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 100G;
     echo "--- MAKE TILE_ARRAY"; set -o pipefail;
     echo exit 13 | make tile_array |& tee make-tile_array.log'
  - 'echo "--- DELETE SVDB"; set -x;
     find $$GOLD -name svdb -exec echo /bin/rm -rf {} \; > /tmp/tmp$$.sh;
     source /tmp/tmp$$.sh; /bin/rm /tmp/tmp$$.sh;
     egrep ^FAILED make-tile_array.log && exit 13 || echo PASSED'
- wait: ~

# Unjumble the build logs for pe, mem tiles
- label: 'log_pe'
  commands:
  - 'cat $$GOLD/*tile_array/*Tile_PE/mflowgen-run.log'

- label: 'log_mem'
  commands:
  - 'cat $$GOLD/*tile_array/*Tile_MemCore/mflowgen-run.log'
- wait: ~

# Check tile_array LVS results but don't halt pipeline regardless of outcome
- label: "lvs?"
  commands:
    - $LVS_CHECK $GOLD
    - ($LVS_CHECK $GOLD | grep INCORRECT > /dev/null) && exit 13 || exit 0
- wait: { continue_on_failure: true }

# Note: "echo exit 13" prevents hang at genus/innovus prompt, allows clean fail
- label: 'glb_top'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 84G;
     echo "--- MAKE GLB_TOP"; set -o pipefail;
     echo exit 13 | make glb_top |& tee make-glb_top.log;
     egrep ^FAILED make-glb_top.log && exit 13 || echo PASSED'
- wait: ~

- label: 'GLC'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 74G;
     echo "--- MAKE GLOBAL_CONTROLLER"; set -o pipefail;
     echo exit 13 | make global_controller |& tee make-GLC.log;
     egrep ^FAILED make-GLC.log && exit 13 || echo PASSED'
- wait: ~

- label: 'dragon'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 74G;
     echo "--- MAKE DRAGONPHY"; set -o pipefail;
     make dragonphy |& tee make-dragon.log'
- wait: ~

- label: 'soc-rtl'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 73G;
     echo "--- MAKE SOC-RTL"; set -o pipefail;
     make soc-rtl |& tee make-soc-rtl.log'
- wait: ~

# Note: "echo exit 13" prevents hang at genus/innovus prompt, allows clean fail
- label: 'syn'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 72G;
     echo "--- MAKE SYNOPSYS-DC-SYNTHESIS"; set -o pipefail;
     echo exit 13 | make cadence-genus-synthesis |& tee make-syn.log'
- wait: ~

- label: 'place'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 71G;
     echo "--- MAKE CADENCE-INNOVUS-PLACE"; set -o pipefail;
     make cadence-innovus-place |& tee make-place.log'
- wait: ~

- label: 'cts'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 71G;
     echo "--- MAKE CADENCE-INNOVUS-CTS"; set -o pipefail;
     echo exit 13 | make cadence-innovus-cts |& tee make-cts.log'
- wait: ~

- label: 'route'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 71G;
     echo "--- MAKE CADENCE-INNOVUS-ROUTE"; set -o pipefail;
     echo exit 13 | make cadence-innovus-route |& tee make-route.log'
- wait: ~

- label: 'postroute'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 71G;
     echo "--- MAKE CADENCE-INNOVUS-POSTROUTE"; set -o pipefail;
     echo exit 13 | make cadence-innovus-postroute |& tee make-postroute.log'
- wait: ~

##########################################################################
# postroute_hold fails sometimes, thus all this infrastructure for retry.
# 
# "prh.sh" does the following:
#   - if "*-postroute_hold" already done and passed, do nothing and exit 0
#   - else if (presumably failed) dir "*-postroute_hold" exists, rename it
#   - build new step postroute_hold
# 
##########################################################################

# postroute_hold, retry if fail.
- label: "hold"
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 70G;
     echo "--- POSTROUTE_HOLD - FIRST ATTEMPT"; set -o pipefail;
     $$PRH |& tee make-prh0.log || $$FAIL1 | $$UPLOAD'
- wait: { continue_on_failure: true }

# First retry, continue with another retry on failure.
- label: "hold'"
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 70G;
     echo "--- POSTROUTE_HOLD - SECOND ATTEMPT"; set -o pipefail;
     $$PRH |& tee make-prh1.log || $$FAIL2 | $UPLOAD'
- wait: { continue_on_failure: true }

# Final postroute_hold attempt, fail pipeline if this one bombs.
- label: "hold''"
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 70G;
     echo "--- POSTROUTE_HOLD - FINAL ATTEMPT"; set -o pipefail;
     $$PRH |& tee make-prh2.log || exit 13'
- wait: ~
  
########################################################################
# continue to next step
########################################################################

- label: 'lvs'
  commands:
  - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 61G;
     echo "--- PREVENT SVDB"; $$GARNET_HOME/.buildkite/bin/no-svdb.sh;
     echo "--- MAKE MENTOR-CALIBRE-LVS"; set -o pipefail;
     make mentor-calibre-lvs |& tee make-lvs.log'
  - 'echo "--- DELETE SVDB"; set -x;
     find $$GOLD -name svdb -exec echo /bin/rm -rf {} \; > /tmp/tmp$$.sh;
     source /tmp/tmp$$.sh; /bin/rm /tmp/tmp$$.sh'
- wait: ~

# Check LVS results and FAIL pipeline if results bad
- label: "lvs?"
  commands:
    - $LVS_CHECK $GOLD
    - ($LVS_CHECK $GOLD | grep INCORRECT > /dev/null) && exit 13 || exit 0
- wait: ~

# Optional DRC check. Not sure if this is ever useful...
# - label: 'drc'
#   commands:
#   - 'source mflowgen/bin/setup-buildkite.sh --dir $$GOLD --need_space 18G;
#      echo "--- MAKE MENTOR-CALIBRE-DRC"; set -o pipefail;
#      make mentor-calibre-drc |& tee make-drc.log'
# - wait: ~

# Final summary
- label: 'summary'
  commands:
  - 'mflowgen/bin/buildcheck.sh $$GOLD --show-all-errors |& tee $$GOLD/buildcheck.out;
     echo ""; echo "+++ SIZE HISTORY"; echo "";
     test -f /build/size-history && cat /build/size-history;
    '
