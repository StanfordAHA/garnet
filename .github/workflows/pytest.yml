name: CI Test

on:
  # Every push
  push:

  # When requested manually
  workflow_dispatch:

  # Every morning at 3am -- how does it know which branch to run??
  schedule:
  - cron: '0 3 * * *'


jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Pull and run docker üêã 
      shell: bash
      run: |
        docker pull stanfordaha/garnet:latest
        docker run -d -it --name CONTAINER stanfordaha/garnet:latest bash
        docker exec stanfordaha/garnet:latest /bin/bash -c "rm -rf /aha/garnet"
        docker cp ../garnet CONTAINER:/aha/garnet

#     - name: Install deps üõ†Ô∏è
#       shell: bash
#       run: |
#         docker exec -i garnet bash -c "apt update"
#         docker exec -i garnet bash -c "apt install -y default-jre"
#         docker exec -i garnet bash -c "pip install -r /garnet/requirements.txt"
#         docker exec -i garnet bash -c "pip install coveralls"
#         docker exec -i garnet bash -c "pip install pytest"
#         docker exec -i garnet bash -c "pip install pytest-cov pytest-pycodestyle z3-solver genesis2"

    - name: Run tests ‚öôÔ∏è
      shell: bash
      run: |
        docker exec -i CONTAINER bash -c "/aha/garnet/.github/scripts/run_pytest.sh"
    - name: Upload Coverage
      shell: bash
      # CODECOV_TOKEN secret stored at https://github.com/StanfordAHA/garnet/settings/secrets/actions
      run: |
        docker exec -i CONTAINER bash -c "cd /aha/garnet/ && bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}"



#       if [ $use_local_garnet == True ]; then
#         docker exec $container_name /bin/bash -c "rm -rf /aha/garnet"
#         # Clone local garnet repo to prevent copying untracked files
#         git clone $GARNET_HOME ./garnet
#         docker cp ./garnet $container_name:/aha/garnet
#       fi
