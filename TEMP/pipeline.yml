env:
  CONFIG: ${CONFIG:-daily}

  # CHECKOUT env var should have been set by aha pipeline flow steps config
  # see https://buildkite.com/stanford-aha/aha-flow/settings/steps
  CHECKOUT: /tmp/ahaflow-custom-checkout-$$BUILDKITE_BUILD_NUMBER.sh

steps:
# This first step builds the docker image that gets used by all subsequent steps.
- label: ":wrench: Build Docker Image"
  key: "docker-build"
  commands:

#   - echo "--- Custom checkout"
#   - echo "+++ debug BEGIN"
#   - echo '------------------------------------------------------------------------'
#   - ls -ld /var/lib/buildkite-agent/builds/r7cad-docker-[12345678]/stanford-aha/aha-flow/temp || echo nope
#   - echo '------------------------------------------------------------------------'
#   - ls -1 /var/lib/buildkite-agent/builds/r7cad-docker-[12345678]/stanford-aha/aha-flow/.buildkite/hooks/post-checkout || echo nope
#   - echo '------------------------------------------------------------------------'
#   - pwd
#   - echo '------------------------------------------------------------------------'
#   - ls -ld .buildkite/hooks || echo nope
#   - echo '------------------------------------------------------------------------'
#   - ls -l .buildkite/hooks || echo nope
#   - echo '------------------------------------------------------------------------'
#   - echo "--- debug END"
# 
#   - echo "--- successed or not i dunno"
#   - exit 13



  # The "if FLOW_REPO" part is redundant when/if not using heroku...
  # - source $$CHECKOUT
  # - source $$CHECKOUT;if [[ $$FLOW_REPO ]]; then (
  - env
  - echo FLOW_REPO=$$FLOW_REPO
  - echo FLOW_REPO=$FLOW_REPO
  - 'set -x;
     pwd;
     test -e tmp-vars && source tmp-vars;
     if [[ $$FLOW_REPO ]]; then
       echo "--- Handle PR";
       cd $FLOW_REPO && git fetch && git checkout $FLOW_HEAD_SHA;
     fi'

  # !!!
  - echo "+++ debug BEGIN"

#   - source .buildkite/hooks/post-checkout

  # Note, from here down, FLOW_REPO and FLOW_HEAD_SHA are null
  # if not called via heroku (I think)

  - echo "--- Creating garnet Image"
  - docker build . -t "garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA"
  # Clear out .TEST file to avoid reporting failure to aha-flow-app.
  # This is a heroku thing I guess.
  # FIXME remove heroku, remove this, along with pre-exit and post-checkout hooks
  - rm -rf temp/.TEST

  - echo "--- Pruning Docker Images"
  - yes | docker image prune -a --filter "until=6h" --filter=label='description=garnet' || true
  agents:
    docker: true
  plugins:
  - uber-workflow/run-without-clone:
# - thedyrt/skip-checkout#v0.1.1: ~
#   - sv-oss/github-pr-labels#v0.0.2:
#       publish-env-var: PULL_REQUEST_LABELS

#   - matrix-org/download#v1.1.0:
#       urls:
#         - https://raw.githubusercontent.com/StanfordAHA/garnet/aha-flow-no-heroku/TEMP/custom-checkout.sh
#   - SpencerSharkey/hooks:
#       precommand: $${BUILDKITE_DOWNLOADS_PATH}/custom-checkout.sh
  - improbable-eng/metahook:
      pre-checkout: |
        echo source $CHECKOUT
        source $CHECKOUT
        # set -x; source .buildkite/hooks/post-checkout
      pre-command: |
        set -x; test -e tmp-vars && source tmp-vars
      pre-exit: |
        pwd
        ls
        chmod +x .buildkite/hooks/pre-exit; ./.buildkite/hooks/pre-exit
#         source .buildkite/hooks/pre-exit # complains about unbound variable :( ??


#       post-checkout: |
#         set -x; curl -s https://raw.githubusercontent.com/StanfordAHA/garnet/aha-flow-no-heroku/TEMP/custom-checkout.sh > custom-checkout.sh
#         pwd
#         ls -l
#         chmod +x ./custom-checkout.sh
#         ls -l
#         ./custom-checkout.sh


  
- label: ":hammer: Amber Gold RTL"
  key: "goldcheck-amber"
  depends_on: "docker-build"
  commands:
  - sleep 500; exit 0
  - /aha/aha/bin/rtl-goldcheck.sh amber
  plugins:
    # - thedyrt/skip-checkout#v0.1.1: ~
    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA
        volumes:
          - "/cad/:/cad"
          - "./temp:/buildkite:rw"
        skip-checkout: true
        mount-checkout: false
        propagate-environment: true
        environment:
          - CONFIG
          - FLOW_REPO
        shell: ["/bin/bash", "-e", "-c"]
  agents:
    docker: true


- label: ":hammer: Onyx Integration Tests"
  key: "integration-tests"
  depends_on: "docker-build"
  commands:

  # Disabled checkout so maybe .buildkite/hooks/post-checkout does not exist
  # So must embed finctionality here instead :/
  - mkdir -p /buildkite/temp; rm -rf /buildkite/temp/.TEST; touch /buildkite/temp/.TEST
  


  - docker images; docker ps; sleep 500; exit 0
  - source /aha/bin/activate
  - source /cad/modules/tcl/init/sh
  - module load base incisive xcelium/19.03.003 vcs/Q-2020.03-SP2
  # make /bin/sh symlink to bash instead of dash:
  - echo "dash dash/sh boolean false" | debconf-set-selections
  - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
  - apt update
  - apt install time
  - ls /aha
  - pip freeze
  - (cd garnet && echo "garnet" && git rev-parse --verify HEAD)
  # Run regression tests
  - if [[ $$FLOW_REPO ]]; then
      export CONFIG=pr;
    fi
  - aha regress $$CONFIG
  # We report success to the aha-flow app by removing the .TEST file,
  # which is created in the post-checkout hook and checked for in the
  # pre-exit hook.
  - echo "--- Removing Failure Canary"
  - ls -al /buildkite
  - rm -rf /buildkite/.TEST
  - ls -al /buildkite

# need to run post-checkout and pre-exit hooks even though did not checkout aha repo
  plugins:
    - matrix-org/download#v1.1.0:
        urls:
          - https://raw.githubusercontent.com/StanfordAHA/garnet/aha-flow-no-heroku/TEMP/custom-checkout.sh
#     - SpencerSharkey/hooks:
#         precommand: $${BUILDKITE_DOWNLOADS_PATH}/custom-checkout.sh

    # - thedyrt/skip-checkout#v0.1.1: ~
    - docker#v3.2.0:
        image: garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA
        volumes:
          - "/cad/:/cad"
          - "./temp:/buildkite:rw"
        mount-checkout: false
        skip-checkout: true
        propagate-environment: true
        environment:
          - CONFIG
          - FLOW_REPO
        shell: ["/bin/bash", "-e", "-c"]
  agents:
    docker: true

# FIXME does docker image get removed even when dependence(s) fail?
- label: ":skull_and_crossbones: Delete Docker Image"
  depends_on:
  - "integration-tests"
  - "goldcheck-amber"
  commands:
  # '--no-prune' so it doesn't prune dangling images, we want to use
  # them for the Docker cache.
  - docker image rm "garnet:$BUILDKITE_COMMIT$FLOW_REPO$FLOW_HEAD_SHA" --no-prune
  agents:
    docker: true
  plugins:
  - uber-workflow/run-without-clone:
# - thedyrt/skip-checkout#v0.1.1: ~
