module `mname` #(
    parameter DATA_WIDTH=64,
    parameter ADDR_WIDTH=14
)
(
    clk,
    clk_en,
    data_in,
    bit_sel,
    data_out,
    wen,
    addr
);

input wire                  clk;
input wire                  clk_en;
input wire                  wen;
input wire[DATA_WIDTH-1:0]  data_in;
input wire[DATA_WIDTH-1:0]  bit_sel;
input wire[ADDR_WIDTH-1:0]  addr;

output wire[DATA_WIDTH-1:0]      data_out;

wire clk_d;

assign #0.1 clk_d = clk;

//; my $sram_gen = generate_base('sram_gen', 'sram_gen');
`$sram_gen->mname()` #(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH)
)
`$sram_gen->iname()` (
    .Q(data_out),
    .CLK(clk_d),
    .CEB(~clk_en), 
    .WEB(~wen), 
    .BWEB(bit_sel), 
    .A(addr), 
    .D(data_in)
);


endmodule
