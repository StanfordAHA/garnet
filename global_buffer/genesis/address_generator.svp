/*=============================================================================
** Module: address_generator.sv
** Description:
**              Address generator
** Author: Taeyoung Kong
** Change history: 04/10/2019 - Implement first version 
**                 05/09/2019 - FIFO, SRAM modes are implemented
**===========================================================================*/

module `mname` #(
    parameter integer BANK_DATA_WIDTH = 64,
    parameter integer BANK_ADDR_WIDTH = 17,
    parameter integer CGRA_DATA_WIDTH = 16,
    parameter integer GLB_ADDR_WIDTH = 22
)
(
    input                           clk,
    input                           reset,

    input                           stall,
    input                           cgra_start_pulse,

    input [GLB_ADDR_WIDTH-1:0]      start_addr,
    input [GLB_ADDR_WIDTH-1:0]      num_words,
    input [1:0]                     mode,

    input                           cgra_to_io_wr_en,
    input                           cgra_to_io_rd_en,
    input  [CGRA_DATA_WIDTH-1:0]    cgra_to_io_wr_data,
    output [CGRA_DATA_WIDTH-1:0]    io_to_cgra_rd_data,
    output                          io_to_cgra_rd_data_valid,
    input  [CGRA_DATA_WIDTH-1:0]    cgra_to_io_addr_high,
    input  [CGRA_DATA_WIDTH-1:0]    cgra_to_io_addr_low,
    
    output                          io_to_bank_wr_en,
    output [BANK_DATA_WIDTH-1:0]    io_to_bank_wr_data,
    output [BANK_DATA_WIDTH-1:0]    io_to_bank_wr_data_bit_sel,
    output                          io_to_bank_rd_en,
    input  [BANK_DATA_WIDTH-1:0]    bank_to_io_rd_data,
    output [GLB_ADDR_WIDTH-1:0]     io_to_bank_addr
);

//============================================================================//
// local parameter declaration
//============================================================================//
/*
localparam integer IDLE = 0;
localparam integer INPUT_FIFO = 1;
localparam integer OUTPUT_FIFO = 2;
localparam integer SRAM = 3;

reg [GLB_ADDR_WIDTH-1:0] num_words_cnt;

always_ff @(posedge clk or posedge reset) begin
    if (reset) begin
        num_words_cnt <= 0;
    end
    else begin

    end
end
*/
endmodule
