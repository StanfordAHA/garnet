//============================================================================//
// generator parameter declaration
//============================================================================//
//; my $num_banks = parameter(Name=>'num_banks', val=> 32, min=>16, step=>2, max=>64, doc=>'Number of banks');
//; my $bank_addr_width = parameter(Name=>'bank_addr_width', val=> 16, min=>3, step=>1, max=>20, doc=>'Address width of each bank. Byte-addressable');
//; my $bank_data_width = parameter(Name=>'bank_data_width', val=> 64, list=>[16, 32, 48, 64], doc=>'Data width of bank');
//; my $top_config_addr_width = parameter(Name=>'top_config_addr_width', val=> 32, doc=>'Address width of top configuration');
//; my $top_config_data_width = parameter(Name=>'top_config_data_width', val=> 32, doc=>'Data width of top configuration');

module `mname` (
    input                                   clk,
    input                                   reset,

//; for (my $i=0; $i<$num_banks; $i++) {
    input                                   host_wr_en_bank_`$i`,
    input  [`$bank_data_width-1`:0]         host_wr_data_bank_`$i`,
    input  [`$bank_addr_width-1`:0]         host_wr_addr_bank_`$i`,

    input                                   host_rd_en_bank_`$i`,
    output [`$bank_data_width-1`:0]         host_rd_data_bank_`$i`,
    input  [`$bank_addr_width-1`:0]         host_rd_addr_bank_`$i`,

    input                                   cgra_wr_en_bank_`$i`,
    input  [`$bank_addr_width-1`:0]         cgra_wr_addr_bank_`$i`,
    input  [`$bank_data_width-1`:0]         cgra_wr_data_bank_`$i`,

    input                                   cgra_rd_en_bank_`$i`,
    input  [`$bank_addr_width-1`:0]         cgra_rd_addr_bank_`$i`,
    output [`$bank_data_width-1`:0]         cgra_rd_data_bank_`$i`,
//; }

    input                                   top_config_en_glb,
    input                                   top_config_wr,
    input                                   top_config_rd,
    input  [`$top_config_addr_width-1`:0]   top_config_addr,
    input  [`$top_config_data_width-1`:0]   top_config_wr_data,
    output [`$top_config_data_width-1`:0]   top_config_rd_data
);

//============================================================================//
// signal connection
//============================================================================//
wire                            int_host_wr_en [`$num_banks-1`:0];
wire [`$bank_addr_width-1`:0]   int_host_wr_addr [`$num_banks-1`:0];
wire [`$bank_data_width-1`:0]   int_host_wr_data [`$num_banks-1`:0];
wire                            int_host_rd_en [`$num_banks-1`:0];
wire [`$bank_addr_width-1`:0]   int_host_rd_addr [`$num_banks-1`:0];
wire [`$bank_data_width-1`:0]   int_host_rd_data [`$num_banks-1`:0];
wire                            int_cgra_wr_en [`$num_banks-1`:0];
wire [`$bank_addr_width-1`:0]   int_cgra_wr_addr [`$num_banks-1`:0];
wire [`$bank_data_width-1`:0]   int_cgra_wr_data [`$num_banks-1`:0];
wire                            int_cgra_rd_en [`$num_banks-1`:0];
wire [`$bank_addr_width-1`:0]   int_cgra_rd_addr [`$num_banks-1`:0];
wire [`$bank_data_width-1`:0]   int_cgra_rd_data [`$num_banks-1`:0];

//; for (my $i=0; $i<$num_banks; $i++) {
assign int_host_wr_en[`$i`] = host_wr_en_bank_`$i`;
assign int_host_wr_addr[`$i`] = host_wr_addr_bank_`$i`;
assign int_host_wr_data[`$i`] = host_wr_data_bank_`$i`;
assign int_host_rd_en[`$i`] = host_rd_en_bank_`$i`;
assign int_host_rd_addr[`$i`] = host_rd_addr_bank_`$i`;
assign host_rd_data_bank_`$i` = int_host_rd_data[`$i`];
assign int_cgra_wr_en[`$i`] = cgra_wr_en_bank_`$i`;
assign int_cgra_wr_addr[`$i`] = cgra_wr_addr_bank_`$i`;
assign int_cgra_wr_data[`$i`] = cgra_wr_data_bank_`$i`;
assign int_cgra_rd_en[`$i`] = cgra_rd_en_bank_`$i`;
assign int_cgra_rd_addr[`$i`] = cgra_rd_addr_bank_`$i`;
assign cgra_rd_data_bank_`$i` = int_cgra_rd_data[`$i`];
//; }

global_buffer #(
    .NUM_BANKS(`$num_banks`),
    .BANK_DATA_WIDTH(`$bank_data_width`),
    .BANK_ADDR_WIDTH(`$bank_addr_width`),
    .CONFIG_ADDR_WIDTH(`$top_config_addr_width`),
    .CONFIG_DATA_WIDTH(`$top_config_data_width`)
) inst_global_buffer
(
    .clk(clk),
    .reset(reset),

    .host_wr_en(int_host_wr_en),
    .host_wr_data(int_host_wr_data),
    .host_wr_addr(int_host_wr_addr),
    .host_rd_en(int_host_rd_en),
    .host_rd_data(int_host_rd_data),
    .host_rd_addr(int_host_rd_addr),

    .cgra_wr_en(int_cgra_wr_en),
    .cgra_wr_data(int_cgra_wr_data),
    .cgra_wr_addr(int_cgra_wr_addr),
    .cgra_rd_en(int_cgra_rd_en),
    .cgra_rd_data(int_cgra_rd_data),
    .cgra_rd_addr(int_cgra_rd_addr),

    .top_config_en_glb(top_config_en_glb),
    .top_config_wr(top_config_wr),
    .top_config_rd(top_config_rd),
    .top_config_addr(top_config_addr),
    .top_config_wr_data(top_config_wr_data),
    .top_config_rd_data(top_config_rd_data)
);

endmodule
