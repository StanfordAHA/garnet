//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /sim/ajcars/aha-arm-soc-june-2019/components/cgra/garnet/global_buffer/genesis/global_buffer_int.svp
//  Source template: global_buffer_int
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter num_io_channels 	= 1
// Parameter num_cfg_channels 	= 1
// Parameter num_banks 	= 32
// Parameter bank_addr_width 	= 17
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

/*=============================================================================
** Module: global_buffer.sv
** Description:
**              Global Buffer
** Author: Taeyoung Kong
** Change history: 04/12/2019 - Implement first version of global buffer
**                 04/18/2019 - Add interconnect between host and banks
**                 04/20/2019 - Add interconnect between io and banks
**                            - Add interconnect between configuration 
**                              and banks
**===========================================================================*/
// num_banks (_GENESIS2_INHERITANCE_PRIORITY_) = 32
//
// bank_addr_width (_GENESIS2_INHERITANCE_PRIORITY_) = 17
//
// num_io_channels (_GENESIS2_INHERITANCE_PRIORITY_) = 1
//
// num_cfg_channels (_GENESIS2_INHERITANCE_PRIORITY_) = 1
//

module global_buffer_int #(
    parameter integer BANK_DATA_WIDTH = 64,
    parameter integer CGRA_DATA_WIDTH = 16,
    parameter integer CFG_ADDR_WIDTH = 32,
    parameter integer CFG_DATA_WIDTH = 32,
    parameter integer GLB_CFG_ADDR_WIDTH = 12,
    parameter integer GLB_CFG_TILE_WIDTH = 2,
    parameter integer GLB_CFG_FEATURE_WIDTH = 4,
    parameter integer GLB_CFG_REG_WIDTH = 4,
    parameter integer BANK_ADDR_WIDTH = 17,
    parameter integer GLB_ADDR_WIDTH = 32
)
(
    input                                   clk,
    input                                   reset,

    input        [BANK_DATA_WIDTH/8-1:0]    host_wr_strb,
    input        [GLB_ADDR_WIDTH-1:0]       host_wr_addr,
    input        [BANK_DATA_WIDTH-1:0]      host_wr_data,

    input                                   host_rd_en,
    input        [GLB_ADDR_WIDTH-1:0]       host_rd_addr,
    output logic [BANK_DATA_WIDTH-1:0]      host_rd_data,

    //input                                   cgra_to_io_stall [0:0],
    input                                   cgra_to_io_wr_en [0:0],
    input                                   cgra_to_io_rd_en [0:0],
    output logic                            io_to_cgra_rd_data_valid [0:0],
    input        [CGRA_DATA_WIDTH-1:0]      cgra_to_io_wr_data [0:0],
    output logic [CGRA_DATA_WIDTH-1:0]      io_to_cgra_rd_data [0:0],
    input        [CGRA_DATA_WIDTH-1:0]      cgra_to_io_addr_high [0:0],
    input        [CGRA_DATA_WIDTH-1:0]      cgra_to_io_addr_low [0:0],

    input                                   glc_to_cgra_cfg_wr,
    input                                   glc_to_cgra_cfg_rd,
    input        [CFG_ADDR_WIDTH-1:0]       glc_to_cgra_cfg_addr,
    input        [CFG_DATA_WIDTH-1:0]       glc_to_cgra_cfg_data,

    output logic                            glb_to_cgra_cfg_wr [0:0],
    output logic                            glb_to_cgra_cfg_rd [0:0],
    output logic [CFG_ADDR_WIDTH-1:0]       glb_to_cgra_cfg_addr [0:0],
    output logic [CFG_DATA_WIDTH-1:0]       glb_to_cgra_cfg_data [0:0],

    input                                   glc_to_io_stall,
    input                                   cgra_start_pulse,
    output logic                            cgra_done_pulse,
    input                                   config_start_pulse,
    output logic                            config_done_pulse,

    input                                   glb_config_wr,
    input                                   glb_config_rd,
    input        [GLB_CFG_ADDR_WIDTH-1:0]   glb_config_addr,
    input        [CFG_DATA_WIDTH-1:0]       glb_config_wr_data,
    output logic [CFG_DATA_WIDTH-1:0]       glb_config_rd_data,

    input                                   glb_sram_config_wr,
    input                                   glb_sram_config_rd,
    input        [CFG_ADDR_WIDTH-1:0]       glb_sram_config_addr,
    input        [CFG_DATA_WIDTH-1:0]       glb_sram_config_wr_data,
    output logic [CFG_DATA_WIDTH-1:0]       glb_sram_config_rd_data
);


//============================================================================//
// global buffer sram configuration signal 
//============================================================================//
logic                                       glb_sram_config_en_bank [31:0];
logic [BANK_ADDR_WIDTH-1:0]                 glb_sram_config_addr_bank;
logic [CFG_ADDR_WIDTH-BANK_ADDR_WIDTH-1:0]  glb_sram_config_bank_sel;
logic [CFG_DATA_WIDTH-1:0]                  glb_sram_config_rd_data_bank [31:0];

assign glb_sram_config_addr_bank = glb_sram_config_addr[BANK_ADDR_WIDTH-1:0];
assign glb_sram_config_bank_sel = glb_sram_config_addr[CFG_ADDR_WIDTH-1: BANK_ADDR_WIDTH];

integer j;
always_comb begin
    for (j=0; j<32; j=j+1) begin
        glb_sram_config_en_bank[j] = (j == glb_sram_config_bank_sel);
    end
end

always_comb begin       
    if (glb_sram_config_rd) begin
        glb_sram_config_rd_data = glb_sram_config_rd_data_bank[glb_sram_config_bank_sel];
    end
    else begin
        glb_sram_config_rd_data = 0;
    end
end

//============================================================================//
// global buffer configuration signal 
//============================================================================//
localparam bit [GLB_CFG_TILE_WIDTH-1:0]
    GLB_CONFIG_IO = 1,
    GLB_CONFIG_CFG = 2;
localparam integer GLB_CFG_FEATURE_REG_WIDTH = GLB_CFG_FEATURE_WIDTH+GLB_CFG_REG_WIDTH;
localparam integer GLB_CFG_BYTE_OFFSET = $clog2(CFG_DATA_WIDTH/8);

logic [GLB_CFG_TILE_WIDTH-1:0]          glb_config_tile_addr;
logic                                   glb_config_en_io;
logic                                   glb_config_en_cfg;
logic [GLB_CFG_FEATURE_REG_WIDTH-1:0]   glb_config_addr_io;
logic [GLB_CFG_FEATURE_REG_WIDTH-1:0]   glb_config_addr_cfg;
logic [CFG_DATA_WIDTH-1:0]              glb_config_rd_data_io;
logic [CFG_DATA_WIDTH-1:0]              glb_config_rd_data_cfg;

assign glb_config_tile_addr = glb_config_addr[GLB_CFG_BYTE_OFFSET+GLB_CFG_FEATURE_REG_WIDTH +: GLB_CFG_TILE_WIDTH];
assign glb_config_en_io = (glb_config_tile_addr == GLB_CONFIG_IO);
assign glb_config_en_cfg = (glb_config_tile_addr == GLB_CONFIG_CFG);
assign glb_config_addr_io = glb_config_addr[GLB_CFG_BYTE_OFFSET +: GLB_CFG_FEATURE_REG_WIDTH];
assign glb_config_addr_cfg = glb_config_addr[GLB_CFG_BYTE_OFFSET +: GLB_CFG_FEATURE_REG_WIDTH];

always_comb begin       
    if (glb_config_rd && glb_config_en_io) begin
        glb_config_rd_data = glb_config_rd_data_io;
    end
    else if (glb_config_rd && glb_config_en_cfg) begin
        glb_config_rd_data = glb_config_rd_data_cfg;
    end
    else begin
        glb_config_rd_data = 0;
    end
end

//============================================================================//
// internal wire declaration
//============================================================================//
wire                        host_wr_en;
wire                        host_to_bank_wr_en [31:0];
wire [BANK_DATA_WIDTH-1:0]  host_to_bank_wr_data [31:0];
wire [BANK_DATA_WIDTH-1:0]  host_to_bank_wr_data_bit_sel [31:0];
wire [BANK_ADDR_WIDTH-1:0]  host_to_bank_wr_addr [31:0];

wire                        host_to_bank_rd_en [31:0];
wire [BANK_DATA_WIDTH-1:0]  bank_to_host_rd_data [31:0];
wire [BANK_ADDR_WIDTH-1:0]  host_to_bank_rd_addr [31:0];

assign host_wr_en = |host_wr_strb;

//============================================================================//
// host-bank interconnect
//============================================================================//
host_bank_interconnect #(
    .BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
    .GLB_ADDR_WIDTH(GLB_ADDR_WIDTH),
    .BANK_DATA_WIDTH(BANK_DATA_WIDTH)
) host_bank_interconnect (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_wr_en),
    .host_wr_strb(host_wr_strb),
    .host_wr_data(host_wr_data),
    .host_wr_addr(host_wr_addr),

    .host_rd_en(host_rd_en),
    .host_rd_addr(host_rd_addr),
    .host_rd_data(host_rd_data),

    .host_to_bank_wr_en(host_to_bank_wr_en),
    .host_to_bank_wr_data(host_to_bank_wr_data),
    .host_to_bank_wr_data_bit_sel(host_to_bank_wr_data_bit_sel),
    .host_to_bank_wr_addr(host_to_bank_wr_addr),

    .host_to_bank_rd_en(host_to_bank_rd_en),
    .host_to_bank_rd_addr(host_to_bank_rd_addr),
    .bank_to_host_rd_data(bank_to_host_rd_data)
);

//============================================================================//
// internal wire declaration
//============================================================================//
wire                        io_to_bank_wr_en [31:0];
wire [BANK_DATA_WIDTH-1:0]  io_to_bank_wr_data [31:0];
wire [BANK_DATA_WIDTH-1:0]  io_to_bank_wr_data_bit_sel [31:0];
wire [BANK_ADDR_WIDTH-1:0]  io_to_bank_wr_addr [31:0];

wire                        io_to_bank_rd_en [31:0];
wire [BANK_DATA_WIDTH-1:0]  bank_to_io_rd_data [31:0];
wire [BANK_ADDR_WIDTH-1:0]  io_to_bank_rd_addr [31:0];

wire                        cfg_to_bank_rd_en [31:0];
wire [BANK_DATA_WIDTH-1:0]  bank_to_cfg_rd_data [31:0];
wire [BANK_ADDR_WIDTH-1:0]  cfg_to_bank_rd_addr [31:0];

//============================================================================//
// bank generation
//============================================================================//
memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_0 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[0]),
    .host_wr_data(host_to_bank_wr_data[0]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[0]),
    .host_wr_addr(host_to_bank_wr_addr[0]),

    .host_rd_en(host_to_bank_rd_en[0]),
    .host_rd_data(bank_to_host_rd_data[0]),
    .host_rd_addr(host_to_bank_rd_addr[0]),

    .cgra_wr_en(io_to_bank_wr_en[0]),
    .cgra_wr_data(io_to_bank_wr_data[0]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[0]),
    .cgra_wr_addr(io_to_bank_wr_addr[0]),

    .cgra_rd_en(io_to_bank_rd_en[0]),
    .cgra_rd_data(bank_to_io_rd_data[0]),
    .cgra_rd_addr(io_to_bank_rd_addr[0]),

    .cfg_rd_en(cfg_to_bank_rd_en[0]),
    .cfg_rd_data(bank_to_cfg_rd_data[0]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[0]),

    .config_en(glb_sram_config_en_bank[0]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[0])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_1 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[1]),
    .host_wr_data(host_to_bank_wr_data[1]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[1]),
    .host_wr_addr(host_to_bank_wr_addr[1]),

    .host_rd_en(host_to_bank_rd_en[1]),
    .host_rd_data(bank_to_host_rd_data[1]),
    .host_rd_addr(host_to_bank_rd_addr[1]),

    .cgra_wr_en(io_to_bank_wr_en[1]),
    .cgra_wr_data(io_to_bank_wr_data[1]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[1]),
    .cgra_wr_addr(io_to_bank_wr_addr[1]),

    .cgra_rd_en(io_to_bank_rd_en[1]),
    .cgra_rd_data(bank_to_io_rd_data[1]),
    .cgra_rd_addr(io_to_bank_rd_addr[1]),

    .cfg_rd_en(cfg_to_bank_rd_en[1]),
    .cfg_rd_data(bank_to_cfg_rd_data[1]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[1]),

    .config_en(glb_sram_config_en_bank[1]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[1])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_2 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[2]),
    .host_wr_data(host_to_bank_wr_data[2]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[2]),
    .host_wr_addr(host_to_bank_wr_addr[2]),

    .host_rd_en(host_to_bank_rd_en[2]),
    .host_rd_data(bank_to_host_rd_data[2]),
    .host_rd_addr(host_to_bank_rd_addr[2]),

    .cgra_wr_en(io_to_bank_wr_en[2]),
    .cgra_wr_data(io_to_bank_wr_data[2]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[2]),
    .cgra_wr_addr(io_to_bank_wr_addr[2]),

    .cgra_rd_en(io_to_bank_rd_en[2]),
    .cgra_rd_data(bank_to_io_rd_data[2]),
    .cgra_rd_addr(io_to_bank_rd_addr[2]),

    .cfg_rd_en(cfg_to_bank_rd_en[2]),
    .cfg_rd_data(bank_to_cfg_rd_data[2]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[2]),

    .config_en(glb_sram_config_en_bank[2]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[2])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_3 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[3]),
    .host_wr_data(host_to_bank_wr_data[3]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[3]),
    .host_wr_addr(host_to_bank_wr_addr[3]),

    .host_rd_en(host_to_bank_rd_en[3]),
    .host_rd_data(bank_to_host_rd_data[3]),
    .host_rd_addr(host_to_bank_rd_addr[3]),

    .cgra_wr_en(io_to_bank_wr_en[3]),
    .cgra_wr_data(io_to_bank_wr_data[3]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[3]),
    .cgra_wr_addr(io_to_bank_wr_addr[3]),

    .cgra_rd_en(io_to_bank_rd_en[3]),
    .cgra_rd_data(bank_to_io_rd_data[3]),
    .cgra_rd_addr(io_to_bank_rd_addr[3]),

    .cfg_rd_en(cfg_to_bank_rd_en[3]),
    .cfg_rd_data(bank_to_cfg_rd_data[3]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[3]),

    .config_en(glb_sram_config_en_bank[3]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[3])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_4 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[4]),
    .host_wr_data(host_to_bank_wr_data[4]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[4]),
    .host_wr_addr(host_to_bank_wr_addr[4]),

    .host_rd_en(host_to_bank_rd_en[4]),
    .host_rd_data(bank_to_host_rd_data[4]),
    .host_rd_addr(host_to_bank_rd_addr[4]),

    .cgra_wr_en(io_to_bank_wr_en[4]),
    .cgra_wr_data(io_to_bank_wr_data[4]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[4]),
    .cgra_wr_addr(io_to_bank_wr_addr[4]),

    .cgra_rd_en(io_to_bank_rd_en[4]),
    .cgra_rd_data(bank_to_io_rd_data[4]),
    .cgra_rd_addr(io_to_bank_rd_addr[4]),

    .cfg_rd_en(cfg_to_bank_rd_en[4]),
    .cfg_rd_data(bank_to_cfg_rd_data[4]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[4]),

    .config_en(glb_sram_config_en_bank[4]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[4])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_5 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[5]),
    .host_wr_data(host_to_bank_wr_data[5]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[5]),
    .host_wr_addr(host_to_bank_wr_addr[5]),

    .host_rd_en(host_to_bank_rd_en[5]),
    .host_rd_data(bank_to_host_rd_data[5]),
    .host_rd_addr(host_to_bank_rd_addr[5]),

    .cgra_wr_en(io_to_bank_wr_en[5]),
    .cgra_wr_data(io_to_bank_wr_data[5]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[5]),
    .cgra_wr_addr(io_to_bank_wr_addr[5]),

    .cgra_rd_en(io_to_bank_rd_en[5]),
    .cgra_rd_data(bank_to_io_rd_data[5]),
    .cgra_rd_addr(io_to_bank_rd_addr[5]),

    .cfg_rd_en(cfg_to_bank_rd_en[5]),
    .cfg_rd_data(bank_to_cfg_rd_data[5]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[5]),

    .config_en(glb_sram_config_en_bank[5]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[5])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_6 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[6]),
    .host_wr_data(host_to_bank_wr_data[6]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[6]),
    .host_wr_addr(host_to_bank_wr_addr[6]),

    .host_rd_en(host_to_bank_rd_en[6]),
    .host_rd_data(bank_to_host_rd_data[6]),
    .host_rd_addr(host_to_bank_rd_addr[6]),

    .cgra_wr_en(io_to_bank_wr_en[6]),
    .cgra_wr_data(io_to_bank_wr_data[6]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[6]),
    .cgra_wr_addr(io_to_bank_wr_addr[6]),

    .cgra_rd_en(io_to_bank_rd_en[6]),
    .cgra_rd_data(bank_to_io_rd_data[6]),
    .cgra_rd_addr(io_to_bank_rd_addr[6]),

    .cfg_rd_en(cfg_to_bank_rd_en[6]),
    .cfg_rd_data(bank_to_cfg_rd_data[6]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[6]),

    .config_en(glb_sram_config_en_bank[6]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[6])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_7 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[7]),
    .host_wr_data(host_to_bank_wr_data[7]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[7]),
    .host_wr_addr(host_to_bank_wr_addr[7]),

    .host_rd_en(host_to_bank_rd_en[7]),
    .host_rd_data(bank_to_host_rd_data[7]),
    .host_rd_addr(host_to_bank_rd_addr[7]),

    .cgra_wr_en(io_to_bank_wr_en[7]),
    .cgra_wr_data(io_to_bank_wr_data[7]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[7]),
    .cgra_wr_addr(io_to_bank_wr_addr[7]),

    .cgra_rd_en(io_to_bank_rd_en[7]),
    .cgra_rd_data(bank_to_io_rd_data[7]),
    .cgra_rd_addr(io_to_bank_rd_addr[7]),

    .cfg_rd_en(cfg_to_bank_rd_en[7]),
    .cfg_rd_data(bank_to_cfg_rd_data[7]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[7]),

    .config_en(glb_sram_config_en_bank[7]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[7])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_8 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[8]),
    .host_wr_data(host_to_bank_wr_data[8]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[8]),
    .host_wr_addr(host_to_bank_wr_addr[8]),

    .host_rd_en(host_to_bank_rd_en[8]),
    .host_rd_data(bank_to_host_rd_data[8]),
    .host_rd_addr(host_to_bank_rd_addr[8]),

    .cgra_wr_en(io_to_bank_wr_en[8]),
    .cgra_wr_data(io_to_bank_wr_data[8]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[8]),
    .cgra_wr_addr(io_to_bank_wr_addr[8]),

    .cgra_rd_en(io_to_bank_rd_en[8]),
    .cgra_rd_data(bank_to_io_rd_data[8]),
    .cgra_rd_addr(io_to_bank_rd_addr[8]),

    .cfg_rd_en(cfg_to_bank_rd_en[8]),
    .cfg_rd_data(bank_to_cfg_rd_data[8]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[8]),

    .config_en(glb_sram_config_en_bank[8]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[8])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_9 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[9]),
    .host_wr_data(host_to_bank_wr_data[9]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[9]),
    .host_wr_addr(host_to_bank_wr_addr[9]),

    .host_rd_en(host_to_bank_rd_en[9]),
    .host_rd_data(bank_to_host_rd_data[9]),
    .host_rd_addr(host_to_bank_rd_addr[9]),

    .cgra_wr_en(io_to_bank_wr_en[9]),
    .cgra_wr_data(io_to_bank_wr_data[9]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[9]),
    .cgra_wr_addr(io_to_bank_wr_addr[9]),

    .cgra_rd_en(io_to_bank_rd_en[9]),
    .cgra_rd_data(bank_to_io_rd_data[9]),
    .cgra_rd_addr(io_to_bank_rd_addr[9]),

    .cfg_rd_en(cfg_to_bank_rd_en[9]),
    .cfg_rd_data(bank_to_cfg_rd_data[9]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[9]),

    .config_en(glb_sram_config_en_bank[9]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[9])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_10 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[10]),
    .host_wr_data(host_to_bank_wr_data[10]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[10]),
    .host_wr_addr(host_to_bank_wr_addr[10]),

    .host_rd_en(host_to_bank_rd_en[10]),
    .host_rd_data(bank_to_host_rd_data[10]),
    .host_rd_addr(host_to_bank_rd_addr[10]),

    .cgra_wr_en(io_to_bank_wr_en[10]),
    .cgra_wr_data(io_to_bank_wr_data[10]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[10]),
    .cgra_wr_addr(io_to_bank_wr_addr[10]),

    .cgra_rd_en(io_to_bank_rd_en[10]),
    .cgra_rd_data(bank_to_io_rd_data[10]),
    .cgra_rd_addr(io_to_bank_rd_addr[10]),

    .cfg_rd_en(cfg_to_bank_rd_en[10]),
    .cfg_rd_data(bank_to_cfg_rd_data[10]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[10]),

    .config_en(glb_sram_config_en_bank[10]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[10])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_11 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[11]),
    .host_wr_data(host_to_bank_wr_data[11]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[11]),
    .host_wr_addr(host_to_bank_wr_addr[11]),

    .host_rd_en(host_to_bank_rd_en[11]),
    .host_rd_data(bank_to_host_rd_data[11]),
    .host_rd_addr(host_to_bank_rd_addr[11]),

    .cgra_wr_en(io_to_bank_wr_en[11]),
    .cgra_wr_data(io_to_bank_wr_data[11]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[11]),
    .cgra_wr_addr(io_to_bank_wr_addr[11]),

    .cgra_rd_en(io_to_bank_rd_en[11]),
    .cgra_rd_data(bank_to_io_rd_data[11]),
    .cgra_rd_addr(io_to_bank_rd_addr[11]),

    .cfg_rd_en(cfg_to_bank_rd_en[11]),
    .cfg_rd_data(bank_to_cfg_rd_data[11]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[11]),

    .config_en(glb_sram_config_en_bank[11]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[11])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_12 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[12]),
    .host_wr_data(host_to_bank_wr_data[12]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[12]),
    .host_wr_addr(host_to_bank_wr_addr[12]),

    .host_rd_en(host_to_bank_rd_en[12]),
    .host_rd_data(bank_to_host_rd_data[12]),
    .host_rd_addr(host_to_bank_rd_addr[12]),

    .cgra_wr_en(io_to_bank_wr_en[12]),
    .cgra_wr_data(io_to_bank_wr_data[12]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[12]),
    .cgra_wr_addr(io_to_bank_wr_addr[12]),

    .cgra_rd_en(io_to_bank_rd_en[12]),
    .cgra_rd_data(bank_to_io_rd_data[12]),
    .cgra_rd_addr(io_to_bank_rd_addr[12]),

    .cfg_rd_en(cfg_to_bank_rd_en[12]),
    .cfg_rd_data(bank_to_cfg_rd_data[12]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[12]),

    .config_en(glb_sram_config_en_bank[12]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[12])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_13 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[13]),
    .host_wr_data(host_to_bank_wr_data[13]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[13]),
    .host_wr_addr(host_to_bank_wr_addr[13]),

    .host_rd_en(host_to_bank_rd_en[13]),
    .host_rd_data(bank_to_host_rd_data[13]),
    .host_rd_addr(host_to_bank_rd_addr[13]),

    .cgra_wr_en(io_to_bank_wr_en[13]),
    .cgra_wr_data(io_to_bank_wr_data[13]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[13]),
    .cgra_wr_addr(io_to_bank_wr_addr[13]),

    .cgra_rd_en(io_to_bank_rd_en[13]),
    .cgra_rd_data(bank_to_io_rd_data[13]),
    .cgra_rd_addr(io_to_bank_rd_addr[13]),

    .cfg_rd_en(cfg_to_bank_rd_en[13]),
    .cfg_rd_data(bank_to_cfg_rd_data[13]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[13]),

    .config_en(glb_sram_config_en_bank[13]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[13])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_14 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[14]),
    .host_wr_data(host_to_bank_wr_data[14]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[14]),
    .host_wr_addr(host_to_bank_wr_addr[14]),

    .host_rd_en(host_to_bank_rd_en[14]),
    .host_rd_data(bank_to_host_rd_data[14]),
    .host_rd_addr(host_to_bank_rd_addr[14]),

    .cgra_wr_en(io_to_bank_wr_en[14]),
    .cgra_wr_data(io_to_bank_wr_data[14]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[14]),
    .cgra_wr_addr(io_to_bank_wr_addr[14]),

    .cgra_rd_en(io_to_bank_rd_en[14]),
    .cgra_rd_data(bank_to_io_rd_data[14]),
    .cgra_rd_addr(io_to_bank_rd_addr[14]),

    .cfg_rd_en(cfg_to_bank_rd_en[14]),
    .cfg_rd_data(bank_to_cfg_rd_data[14]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[14]),

    .config_en(glb_sram_config_en_bank[14]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[14])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_15 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[15]),
    .host_wr_data(host_to_bank_wr_data[15]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[15]),
    .host_wr_addr(host_to_bank_wr_addr[15]),

    .host_rd_en(host_to_bank_rd_en[15]),
    .host_rd_data(bank_to_host_rd_data[15]),
    .host_rd_addr(host_to_bank_rd_addr[15]),

    .cgra_wr_en(io_to_bank_wr_en[15]),
    .cgra_wr_data(io_to_bank_wr_data[15]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[15]),
    .cgra_wr_addr(io_to_bank_wr_addr[15]),

    .cgra_rd_en(io_to_bank_rd_en[15]),
    .cgra_rd_data(bank_to_io_rd_data[15]),
    .cgra_rd_addr(io_to_bank_rd_addr[15]),

    .cfg_rd_en(cfg_to_bank_rd_en[15]),
    .cfg_rd_data(bank_to_cfg_rd_data[15]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[15]),

    .config_en(glb_sram_config_en_bank[15]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[15])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_16 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[16]),
    .host_wr_data(host_to_bank_wr_data[16]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[16]),
    .host_wr_addr(host_to_bank_wr_addr[16]),

    .host_rd_en(host_to_bank_rd_en[16]),
    .host_rd_data(bank_to_host_rd_data[16]),
    .host_rd_addr(host_to_bank_rd_addr[16]),

    .cgra_wr_en(io_to_bank_wr_en[16]),
    .cgra_wr_data(io_to_bank_wr_data[16]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[16]),
    .cgra_wr_addr(io_to_bank_wr_addr[16]),

    .cgra_rd_en(io_to_bank_rd_en[16]),
    .cgra_rd_data(bank_to_io_rd_data[16]),
    .cgra_rd_addr(io_to_bank_rd_addr[16]),

    .cfg_rd_en(cfg_to_bank_rd_en[16]),
    .cfg_rd_data(bank_to_cfg_rd_data[16]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[16]),

    .config_en(glb_sram_config_en_bank[16]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[16])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_17 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[17]),
    .host_wr_data(host_to_bank_wr_data[17]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[17]),
    .host_wr_addr(host_to_bank_wr_addr[17]),

    .host_rd_en(host_to_bank_rd_en[17]),
    .host_rd_data(bank_to_host_rd_data[17]),
    .host_rd_addr(host_to_bank_rd_addr[17]),

    .cgra_wr_en(io_to_bank_wr_en[17]),
    .cgra_wr_data(io_to_bank_wr_data[17]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[17]),
    .cgra_wr_addr(io_to_bank_wr_addr[17]),

    .cgra_rd_en(io_to_bank_rd_en[17]),
    .cgra_rd_data(bank_to_io_rd_data[17]),
    .cgra_rd_addr(io_to_bank_rd_addr[17]),

    .cfg_rd_en(cfg_to_bank_rd_en[17]),
    .cfg_rd_data(bank_to_cfg_rd_data[17]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[17]),

    .config_en(glb_sram_config_en_bank[17]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[17])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_18 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[18]),
    .host_wr_data(host_to_bank_wr_data[18]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[18]),
    .host_wr_addr(host_to_bank_wr_addr[18]),

    .host_rd_en(host_to_bank_rd_en[18]),
    .host_rd_data(bank_to_host_rd_data[18]),
    .host_rd_addr(host_to_bank_rd_addr[18]),

    .cgra_wr_en(io_to_bank_wr_en[18]),
    .cgra_wr_data(io_to_bank_wr_data[18]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[18]),
    .cgra_wr_addr(io_to_bank_wr_addr[18]),

    .cgra_rd_en(io_to_bank_rd_en[18]),
    .cgra_rd_data(bank_to_io_rd_data[18]),
    .cgra_rd_addr(io_to_bank_rd_addr[18]),

    .cfg_rd_en(cfg_to_bank_rd_en[18]),
    .cfg_rd_data(bank_to_cfg_rd_data[18]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[18]),

    .config_en(glb_sram_config_en_bank[18]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[18])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_19 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[19]),
    .host_wr_data(host_to_bank_wr_data[19]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[19]),
    .host_wr_addr(host_to_bank_wr_addr[19]),

    .host_rd_en(host_to_bank_rd_en[19]),
    .host_rd_data(bank_to_host_rd_data[19]),
    .host_rd_addr(host_to_bank_rd_addr[19]),

    .cgra_wr_en(io_to_bank_wr_en[19]),
    .cgra_wr_data(io_to_bank_wr_data[19]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[19]),
    .cgra_wr_addr(io_to_bank_wr_addr[19]),

    .cgra_rd_en(io_to_bank_rd_en[19]),
    .cgra_rd_data(bank_to_io_rd_data[19]),
    .cgra_rd_addr(io_to_bank_rd_addr[19]),

    .cfg_rd_en(cfg_to_bank_rd_en[19]),
    .cfg_rd_data(bank_to_cfg_rd_data[19]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[19]),

    .config_en(glb_sram_config_en_bank[19]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[19])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_20 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[20]),
    .host_wr_data(host_to_bank_wr_data[20]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[20]),
    .host_wr_addr(host_to_bank_wr_addr[20]),

    .host_rd_en(host_to_bank_rd_en[20]),
    .host_rd_data(bank_to_host_rd_data[20]),
    .host_rd_addr(host_to_bank_rd_addr[20]),

    .cgra_wr_en(io_to_bank_wr_en[20]),
    .cgra_wr_data(io_to_bank_wr_data[20]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[20]),
    .cgra_wr_addr(io_to_bank_wr_addr[20]),

    .cgra_rd_en(io_to_bank_rd_en[20]),
    .cgra_rd_data(bank_to_io_rd_data[20]),
    .cgra_rd_addr(io_to_bank_rd_addr[20]),

    .cfg_rd_en(cfg_to_bank_rd_en[20]),
    .cfg_rd_data(bank_to_cfg_rd_data[20]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[20]),

    .config_en(glb_sram_config_en_bank[20]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[20])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_21 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[21]),
    .host_wr_data(host_to_bank_wr_data[21]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[21]),
    .host_wr_addr(host_to_bank_wr_addr[21]),

    .host_rd_en(host_to_bank_rd_en[21]),
    .host_rd_data(bank_to_host_rd_data[21]),
    .host_rd_addr(host_to_bank_rd_addr[21]),

    .cgra_wr_en(io_to_bank_wr_en[21]),
    .cgra_wr_data(io_to_bank_wr_data[21]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[21]),
    .cgra_wr_addr(io_to_bank_wr_addr[21]),

    .cgra_rd_en(io_to_bank_rd_en[21]),
    .cgra_rd_data(bank_to_io_rd_data[21]),
    .cgra_rd_addr(io_to_bank_rd_addr[21]),

    .cfg_rd_en(cfg_to_bank_rd_en[21]),
    .cfg_rd_data(bank_to_cfg_rd_data[21]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[21]),

    .config_en(glb_sram_config_en_bank[21]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[21])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_22 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[22]),
    .host_wr_data(host_to_bank_wr_data[22]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[22]),
    .host_wr_addr(host_to_bank_wr_addr[22]),

    .host_rd_en(host_to_bank_rd_en[22]),
    .host_rd_data(bank_to_host_rd_data[22]),
    .host_rd_addr(host_to_bank_rd_addr[22]),

    .cgra_wr_en(io_to_bank_wr_en[22]),
    .cgra_wr_data(io_to_bank_wr_data[22]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[22]),
    .cgra_wr_addr(io_to_bank_wr_addr[22]),

    .cgra_rd_en(io_to_bank_rd_en[22]),
    .cgra_rd_data(bank_to_io_rd_data[22]),
    .cgra_rd_addr(io_to_bank_rd_addr[22]),

    .cfg_rd_en(cfg_to_bank_rd_en[22]),
    .cfg_rd_data(bank_to_cfg_rd_data[22]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[22]),

    .config_en(glb_sram_config_en_bank[22]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[22])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_23 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[23]),
    .host_wr_data(host_to_bank_wr_data[23]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[23]),
    .host_wr_addr(host_to_bank_wr_addr[23]),

    .host_rd_en(host_to_bank_rd_en[23]),
    .host_rd_data(bank_to_host_rd_data[23]),
    .host_rd_addr(host_to_bank_rd_addr[23]),

    .cgra_wr_en(io_to_bank_wr_en[23]),
    .cgra_wr_data(io_to_bank_wr_data[23]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[23]),
    .cgra_wr_addr(io_to_bank_wr_addr[23]),

    .cgra_rd_en(io_to_bank_rd_en[23]),
    .cgra_rd_data(bank_to_io_rd_data[23]),
    .cgra_rd_addr(io_to_bank_rd_addr[23]),

    .cfg_rd_en(cfg_to_bank_rd_en[23]),
    .cfg_rd_data(bank_to_cfg_rd_data[23]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[23]),

    .config_en(glb_sram_config_en_bank[23]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[23])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_24 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[24]),
    .host_wr_data(host_to_bank_wr_data[24]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[24]),
    .host_wr_addr(host_to_bank_wr_addr[24]),

    .host_rd_en(host_to_bank_rd_en[24]),
    .host_rd_data(bank_to_host_rd_data[24]),
    .host_rd_addr(host_to_bank_rd_addr[24]),

    .cgra_wr_en(io_to_bank_wr_en[24]),
    .cgra_wr_data(io_to_bank_wr_data[24]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[24]),
    .cgra_wr_addr(io_to_bank_wr_addr[24]),

    .cgra_rd_en(io_to_bank_rd_en[24]),
    .cgra_rd_data(bank_to_io_rd_data[24]),
    .cgra_rd_addr(io_to_bank_rd_addr[24]),

    .cfg_rd_en(cfg_to_bank_rd_en[24]),
    .cfg_rd_data(bank_to_cfg_rd_data[24]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[24]),

    .config_en(glb_sram_config_en_bank[24]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[24])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_25 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[25]),
    .host_wr_data(host_to_bank_wr_data[25]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[25]),
    .host_wr_addr(host_to_bank_wr_addr[25]),

    .host_rd_en(host_to_bank_rd_en[25]),
    .host_rd_data(bank_to_host_rd_data[25]),
    .host_rd_addr(host_to_bank_rd_addr[25]),

    .cgra_wr_en(io_to_bank_wr_en[25]),
    .cgra_wr_data(io_to_bank_wr_data[25]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[25]),
    .cgra_wr_addr(io_to_bank_wr_addr[25]),

    .cgra_rd_en(io_to_bank_rd_en[25]),
    .cgra_rd_data(bank_to_io_rd_data[25]),
    .cgra_rd_addr(io_to_bank_rd_addr[25]),

    .cfg_rd_en(cfg_to_bank_rd_en[25]),
    .cfg_rd_data(bank_to_cfg_rd_data[25]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[25]),

    .config_en(glb_sram_config_en_bank[25]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[25])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_26 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[26]),
    .host_wr_data(host_to_bank_wr_data[26]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[26]),
    .host_wr_addr(host_to_bank_wr_addr[26]),

    .host_rd_en(host_to_bank_rd_en[26]),
    .host_rd_data(bank_to_host_rd_data[26]),
    .host_rd_addr(host_to_bank_rd_addr[26]),

    .cgra_wr_en(io_to_bank_wr_en[26]),
    .cgra_wr_data(io_to_bank_wr_data[26]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[26]),
    .cgra_wr_addr(io_to_bank_wr_addr[26]),

    .cgra_rd_en(io_to_bank_rd_en[26]),
    .cgra_rd_data(bank_to_io_rd_data[26]),
    .cgra_rd_addr(io_to_bank_rd_addr[26]),

    .cfg_rd_en(cfg_to_bank_rd_en[26]),
    .cfg_rd_data(bank_to_cfg_rd_data[26]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[26]),

    .config_en(glb_sram_config_en_bank[26]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[26])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_27 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[27]),
    .host_wr_data(host_to_bank_wr_data[27]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[27]),
    .host_wr_addr(host_to_bank_wr_addr[27]),

    .host_rd_en(host_to_bank_rd_en[27]),
    .host_rd_data(bank_to_host_rd_data[27]),
    .host_rd_addr(host_to_bank_rd_addr[27]),

    .cgra_wr_en(io_to_bank_wr_en[27]),
    .cgra_wr_data(io_to_bank_wr_data[27]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[27]),
    .cgra_wr_addr(io_to_bank_wr_addr[27]),

    .cgra_rd_en(io_to_bank_rd_en[27]),
    .cgra_rd_data(bank_to_io_rd_data[27]),
    .cgra_rd_addr(io_to_bank_rd_addr[27]),

    .cfg_rd_en(cfg_to_bank_rd_en[27]),
    .cfg_rd_data(bank_to_cfg_rd_data[27]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[27]),

    .config_en(glb_sram_config_en_bank[27]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[27])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_28 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[28]),
    .host_wr_data(host_to_bank_wr_data[28]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[28]),
    .host_wr_addr(host_to_bank_wr_addr[28]),

    .host_rd_en(host_to_bank_rd_en[28]),
    .host_rd_data(bank_to_host_rd_data[28]),
    .host_rd_addr(host_to_bank_rd_addr[28]),

    .cgra_wr_en(io_to_bank_wr_en[28]),
    .cgra_wr_data(io_to_bank_wr_data[28]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[28]),
    .cgra_wr_addr(io_to_bank_wr_addr[28]),

    .cgra_rd_en(io_to_bank_rd_en[28]),
    .cgra_rd_data(bank_to_io_rd_data[28]),
    .cgra_rd_addr(io_to_bank_rd_addr[28]),

    .cfg_rd_en(cfg_to_bank_rd_en[28]),
    .cfg_rd_data(bank_to_cfg_rd_data[28]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[28]),

    .config_en(glb_sram_config_en_bank[28]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[28])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_29 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[29]),
    .host_wr_data(host_to_bank_wr_data[29]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[29]),
    .host_wr_addr(host_to_bank_wr_addr[29]),

    .host_rd_en(host_to_bank_rd_en[29]),
    .host_rd_data(bank_to_host_rd_data[29]),
    .host_rd_addr(host_to_bank_rd_addr[29]),

    .cgra_wr_en(io_to_bank_wr_en[29]),
    .cgra_wr_data(io_to_bank_wr_data[29]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[29]),
    .cgra_wr_addr(io_to_bank_wr_addr[29]),

    .cgra_rd_en(io_to_bank_rd_en[29]),
    .cgra_rd_data(bank_to_io_rd_data[29]),
    .cgra_rd_addr(io_to_bank_rd_addr[29]),

    .cfg_rd_en(cfg_to_bank_rd_en[29]),
    .cfg_rd_data(bank_to_cfg_rd_data[29]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[29]),

    .config_en(glb_sram_config_en_bank[29]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[29])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_30 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[30]),
    .host_wr_data(host_to_bank_wr_data[30]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[30]),
    .host_wr_addr(host_to_bank_wr_addr[30]),

    .host_rd_en(host_to_bank_rd_en[30]),
    .host_rd_data(bank_to_host_rd_data[30]),
    .host_rd_addr(host_to_bank_rd_addr[30]),

    .cgra_wr_en(io_to_bank_wr_en[30]),
    .cgra_wr_data(io_to_bank_wr_data[30]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[30]),
    .cgra_wr_addr(io_to_bank_wr_addr[30]),

    .cgra_rd_en(io_to_bank_rd_en[30]),
    .cgra_rd_data(bank_to_io_rd_data[30]),
    .cgra_rd_addr(io_to_bank_rd_addr[30]),

    .cfg_rd_en(cfg_to_bank_rd_en[30]),
    .cfg_rd_data(bank_to_cfg_rd_data[30]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[30]),

    .config_en(glb_sram_config_en_bank[30]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[30])
);

memory_bank #(
.BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
.BANK_DATA_WIDTH(BANK_DATA_WIDTH),
.CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) memory_bank_31 (
    .clk(clk),
    .reset(reset),

    .host_wr_en(host_to_bank_wr_en[31]),
    .host_wr_data(host_to_bank_wr_data[31]),
    .host_wr_data_bit_sel(host_to_bank_wr_data_bit_sel[31]),
    .host_wr_addr(host_to_bank_wr_addr[31]),

    .host_rd_en(host_to_bank_rd_en[31]),
    .host_rd_data(bank_to_host_rd_data[31]),
    .host_rd_addr(host_to_bank_rd_addr[31]),

    .cgra_wr_en(io_to_bank_wr_en[31]),
    .cgra_wr_data(io_to_bank_wr_data[31]),
    .cgra_wr_data_bit_sel(io_to_bank_wr_data_bit_sel[31]),
    .cgra_wr_addr(io_to_bank_wr_addr[31]),

    .cgra_rd_en(io_to_bank_rd_en[31]),
    .cgra_rd_data(bank_to_io_rd_data[31]),
    .cgra_rd_addr(io_to_bank_rd_addr[31]),

    .cfg_rd_en(cfg_to_bank_rd_en[31]),
    .cfg_rd_data(bank_to_cfg_rd_data[31]),
    .cfg_rd_addr(cfg_to_bank_rd_addr[31]),

    .config_en(glb_sram_config_en_bank[31]),
    .config_wr(glb_sram_config_wr),
    .config_rd(glb_sram_config_rd),
    .config_addr(glb_sram_config_addr_bank),
    .config_wr_data(glb_sram_config_wr_data),
    .config_rd_data(glb_sram_config_rd_data_bank[31])
);


//============================================================================//
// cgra_io-bank interconnect
//============================================================================//
io_controller #(
    .GLB_ADDR_WIDTH(GLB_ADDR_WIDTH),
    .BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
    .BANK_DATA_WIDTH(BANK_DATA_WIDTH),
    .CGRA_DATA_WIDTH(CGRA_DATA_WIDTH),
    .CONFIG_FEATURE_WIDTH(GLB_CFG_FEATURE_WIDTH),
    .CONFIG_REG_WIDTH(GLB_CFG_REG_WIDTH),
    .CONFIG_DATA_WIDTH(CFG_DATA_WIDTH)
) io_controller (
    .clk(clk),
    .reset(reset),

    .cgra_start_pulse(cgra_start_pulse),
    .cgra_done_pulse(cgra_done_pulse),

    .glc_to_io_stall(glc_to_io_stall),
    //.cgra_to_io_stall(cgra_to_io_stall),
    .cgra_to_io_rd_en(cgra_to_io_rd_en),
    .cgra_to_io_wr_en(cgra_to_io_wr_en),
    .cgra_to_io_addr_high(cgra_to_io_addr_high),
    .cgra_to_io_addr_low(cgra_to_io_addr_low),
    .cgra_to_io_wr_data(cgra_to_io_wr_data),
    .io_to_cgra_rd_data(io_to_cgra_rd_data),
    .io_to_cgra_rd_data_valid(io_to_cgra_rd_data_valid),

    .io_to_bank_wr_en(io_to_bank_wr_en),
    .io_to_bank_wr_data(io_to_bank_wr_data),
    .io_to_bank_wr_data_bit_sel(io_to_bank_wr_data_bit_sel),
    .io_to_bank_wr_addr(io_to_bank_wr_addr),
    .io_to_bank_rd_en(io_to_bank_rd_en),
    .io_to_bank_rd_addr(io_to_bank_rd_addr),
    .bank_to_io_rd_data(bank_to_io_rd_data),

    .config_en(glb_config_en_io),
    .config_wr(glb_config_wr),
    .config_rd(glb_config_rd),
    .config_addr(glb_config_addr_io),
    .config_wr_data(glb_config_wr_data),
    .config_rd_data(glb_config_rd_data_io)
);


//============================================================================//
// cfg-bank interconnect
//============================================================================//
cfg_controller #(
    .GLB_ADDR_WIDTH(GLB_ADDR_WIDTH),
    .BANK_ADDR_WIDTH(BANK_ADDR_WIDTH),
    .BANK_DATA_WIDTH(BANK_DATA_WIDTH),
    .CONFIG_FEATURE_WIDTH(GLB_CFG_FEATURE_WIDTH),
    .CONFIG_REG_WIDTH(GLB_CFG_REG_WIDTH),
    .CONFIG_DATA_WIDTH(CFG_DATA_WIDTH),
    .CFG_ADDR_WIDTH(CFG_ADDR_WIDTH),
    .CFG_DATA_WIDTH(CFG_DATA_WIDTH)
) cfg_controller (
    .clk(clk),
    .reset(reset),

    .config_start_pulse(config_start_pulse),
    .config_done_pulse(config_done_pulse),

    .cfg_to_bank_rd_en(cfg_to_bank_rd_en),
    .cfg_to_bank_rd_addr(cfg_to_bank_rd_addr),
    .bank_to_cfg_rd_data(bank_to_cfg_rd_data),

    .glc_to_cgra_cfg_wr(glc_to_cgra_cfg_wr),
    .glc_to_cgra_cfg_rd(glc_to_cgra_cfg_rd),
    .glc_to_cgra_cfg_addr(glc_to_cgra_cfg_addr),
    .glc_to_cgra_cfg_data(glc_to_cgra_cfg_data),

    .glb_to_cgra_cfg_wr(glb_to_cgra_cfg_wr),
    .glb_to_cgra_cfg_rd(glb_to_cgra_cfg_rd),
    .glb_to_cgra_cfg_addr(glb_to_cgra_cfg_addr),
    .glb_to_cgra_cfg_data(glb_to_cgra_cfg_data),

    .config_en(glb_config_en_cfg),
    .config_wr(glb_config_wr),
    .config_rd(glb_config_rd),
    .config_addr(glb_config_addr_cfg),
    .config_wr_data(glb_config_wr_data),
    .config_rd_data(glb_config_rd_data_cfg)
);

endmodule
