Flow is modularized such that all power domains related scripts are part of power-domains node.

However there are few steps where having power-domain eqivalent scripts would cause heavy code duplication.

Hence the power-domain specific portion for those scripts is embedded in the baseline scripts itself
using $::env(PWR_AWARE) variable. E.g. in power-strategy-dualmesh.tcl, extra command option is added
using PWR_AWARE variable. 

if $::env(PWR_AWARE) {
  setAddStripeMode -area [list $stripeLlx $stripeLly $stripeUrx $stripeUry] -ignore_nondefault_domains true
} else {
  setAddStripeMode -area [list $stripeLlx $stripeLly $stripeUrx $stripeUry]
} 

Also, in synthesis, the power-aware scripts are sourced from the baseline constraints.tcl:

if $::env(PWR_AWARE) {
    source inputs/dc-dont-use-constraints.tcl
    source inputs/pe-constraints.tcl
}


 
